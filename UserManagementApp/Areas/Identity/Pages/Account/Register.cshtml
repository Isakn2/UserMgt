@page
@model RegisterModel
@{
    ViewData["Title"] = "Register";
}

<h1>@ViewData["Title"]</h1>

<div class="row">
    <div class="col-md-4">
        @if (TempData["Message"] != null)
        {
            <div class="alert alert-success">
                @TempData["Message"]
            </div>
        }

        <form id="registerForm" asp-route-returnUrl="@Model.ReturnUrl" method="post">
            <h2>Create a new account.</h2>
            <hr />
            <div asp-validation-summary="ModelOnly" class="text-danger" role="alert"></div>
            
            <div class="form-floating mb-3">
                <input asp-for="Input.Name" class="form-control" autocomplete="name" aria-required="true" placeholder=" " />
                <label asp-for="Input.Name">Full Name</label>
                <span asp-validation-for="Input.Name" class="text-danger"></span>
            </div>
            
            <div class="form-floating mb-3">
                <input asp-for="Input.Email" class="form-control" autocomplete="email" aria-required="true" placeholder=" " />
                <label asp-for="Input.Email">Email</label>
                <span asp-validation-for="Input.Email" class="text-danger"></span>
            </div>
            
            <div class="form-floating mb-3 password-container">
                <input asp-for="Input.Password" class="form-control" 
                       type="password" 
                       autocomplete="new-password" 
                       aria-required="true" 
                       placeholder=" " 
                       id="password" />
                <label asp-for="Input.Password">Password</label>
                <button type="button" class="btn btn-sm password-toggle" aria-label="Show password">
                    <i class="bi bi-eye"></i>
                </button>
                <span asp-validation-for="Input.Password" class="text-danger"></span>
            </div>
            
            <div class="form-floating mb-3 password-container">
                <input asp-for="Input.ConfirmPassword" class="form-control" 
                       type="password" 
                       autocomplete="new-password" 
                       aria-required="true" 
                       placeholder=" " 
                       id="confirmPassword" />
                <label asp-for="Input.ConfirmPassword">Confirm Password</label>
                <button type="button" class="btn btn-sm password-toggle" aria-label="Show password">
                    <i class="bi bi-eye"></i>
                </button>
                <span asp-validation-for="Input.ConfirmPassword" class="text-danger"></span>
            </div>
            
            <button id="registerSubmit" type="submit" class="w-100 btn btn-lg btn-primary">Register</button>
        </form>
    </div>
    
    <div class="col-md-6 col-md-offset-2">
        <section>
            <h3>Use another service to register.</h3>
            <hr />
            @if ((Model.ExternalLogins?.Count ?? 0) == 0)
            {
                <div>
                    <p>
                        There are no external authentication services configured. See this 
                        <a href="https://go.microsoft.com/fwlink/?LinkID=532715">article about setting up external logins</a>.
                    </p>
                </div>
            }
            else
            {
                <form id="external-account" asp-page="./ExternalLogin" asp-route-returnUrl="@Model.ReturnUrl" method="post" class="form-horizontal">
                    <div>
                        <p>
                            @foreach (var provider in Model.ExternalLogins!)
                            {
                                <button type="submit" class="btn btn-primary" name="provider" value="@provider.Name" title="Log in using your @provider.DisplayName account">
                                    @provider.DisplayName
                                </button>
                            }
                        </p>
                    </div>
                </form>
            }
        </section>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Password toggle functionality
            const toggleButtons = document.querySelectorAll('.password-toggle');
            
            toggleButtons.forEach(button => {
                button.addEventListener('click', function() {
                    const input = this.parentElement.querySelector('input');
                    const icon = this.querySelector('i');
                    
                    if (input.type === 'password') {
                        input.type = 'text';
                        icon.classList.remove('bi-eye');
                        icon.classList.add('bi-eye-slash');
                    } else {
                        input.type = 'password';
                        icon.classList.remove('bi-eye-slash');
                        icon.classList.add('bi-eye');
                    }
                });
            });
            
            // Better placeholder handling for floating labels
            const inputs = document.querySelectorAll('.form-floating input');
            inputs.forEach(input => {
                input.addEventListener('focus', function() {
                    this.placeholder = ' ';
                });
                input.addEventListener('blur', function() {
                    if (!this.value) this.placeholder = ' ';
                });
            });
        });
    </script>
}

<style>
    .password-container {
        position: relative;
    }
    
    .password-toggle {
        position: absolute;
        right: 10px;
        top: 50%;
        transform: translateY(-50%);
        background: none;
        border: none;
        color: #6c757d;
        z-index: 10;
    }
    
    .form-floating input {
        padding-right: 40px;
    }
</style>